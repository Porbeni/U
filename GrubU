const fs = require('fs');

// Function to read data from a CSV file
function readCSV(filePath) {
  const data = fs.readFileSync(filePath, 'utf8');
  const lines = data.trim().split('\n');
  const headers = lines.shift().split(',');
  const table = lines.map(line => {
    const values = line.split(',');
    const entry = {};
    for (let i = 0; i < headers.length; i++) {
      entry[headers[i]] = values[i];
    }
    return entry;
  });
  return table;
}

// Function to create a breakfast plan based on user input
function createBreakfastPlan(data, userCalories, userProtein) {
  let bestPlan = [];
  let minCaloriesDiff = Number.MAX_VALUE;
  let minProteinDiff = Number.MAX_VALUE;

  // Loop through all possible combinations of food items
  for (let i = 0; i < data.length; i++) {
    const breakfastOption = [data[i]];
    let totalCalories = parseInt(data[i].Calories);
    let totalProtein = parseFloat(data[i].Protein);

    for (let j = i + 1; j < data.length; j++) {
      totalCalories += parseInt(data[j].Calories);
      totalProtein += parseFloat(data[j].Protein);
      breakfastOption.push(data[j]);

      const caloriesDiff = Math.abs(userCalories - totalCalories);
      const proteinDiff = Math.abs(userProtein - totalProtein);

      if (caloriesDiff <= 200 && proteinDiff <= 5) {
        // Check if this combination is better than the current best plan
        if (caloriesDiff < minCaloriesDiff || (caloriesDiff === minCaloriesDiff && proteinDiff < minProteinDiff)) {
          bestPlan = breakfastOption.slice(); // Create a copy of the breakfastOption array
          minCaloriesDiff = caloriesDiff;
          minProteinDiff = proteinDiff;
        }
      }
    }
  }

  // Add the selected breakfast plan to the 7th column
  for (let i = 0; i < bestPlan.length; i++) {
    bestPlan[i].MealPlan = 'Yes';
  }

  return bestPlan;
}

// Example usage:
const filePath = 'food_data.csv';
const userCalories = 500;
const userProtein = 15;

const data = readCSV(filePath);
const breakfastPlan = createBreakfastPlan(data, userCalories, userProtein);

if (breakfastPlan.length > 0) {
  console.log('Breakfast Plan:');
  for (const food of breakfastPlan) {
    console.log(food.Food + ' - Calories: ' + food.Calories + ' Protein: ' + food.Protein + ' MealPlan: ' + food.MealPlan);
  }
} else {
  console.log('No breakfast plan found within the specified criteria.');
}
